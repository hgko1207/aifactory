<?xml version="1.0" encoding="UTF-8"?>
<!-- local -->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <security:http pattern="/resources/**" security="none"/>
    <security:http pattern="\A/WEB-INF/jsp/.*\Z" request-matcher="regex" security="none"/>
    
    <security:http auto-config="true" use-expressions="true">
        <security:intercept-url pattern="/task/insert*" access="hasAnyRole('ROLE_ADMN','ROLE_BIZC')"/>
        <security:intercept-url pattern="/submission/**" access="isAuthenticated()"/>
        <security:intercept-url pattern="/user/insert*" access="permitAll"/>
        <security:intercept-url pattern="/**/insert*" access="isAuthenticated()"/>
        <security:intercept-url pattern="/**/update*" access="isAuthenticated()"/>
        <security:intercept-url pattern="/**" access="permitAll"/>
<!--         <security:intercept-url pattern="/**" access="isAuthenticated()"/> -->
        <security:form-login
            username-parameter="loginid"
            password-parameter="loginpwd"
            login-page="/login/login.do"
            default-target-url="/login/login.do"
            authentication-failure-url="/login/login.do?fail=true"
            authentication-success-handler-ref="customAuthenticationSuccessHandler"
            authentication-failure-handler-ref="customAuthenticationFailureHandler"
        />
        <security:session-management session-authentication-strategy-ref="sas"/>
        <security:access-denied-handler error-page="/resources/err/code403.jsp"/>
        <security:custom-filter before="BASIC_AUTH_FILTER" ref="beforeBasicAuthFilter"/>
        <security:custom-filter after="EXCEPTION_TRANSLATION_FILTER" ref="ajaxSessionTimeoutFilter"/>
<!--         <security:custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="filterSecurityInterceptor"/> -->
    </security:http>
    
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider user-service-ref="customJdbcDaoImpl">
            <security:password-encoder ref="bcryptPasswordEncoder" />
        </security:authentication-provider>
    </security:authentication-manager>
    
    <bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
        <constructor-arg>
            <list>
                <bean class="org.springframework.security.access.vote.RoleVoter">
                    <property name="rolePrefix" value="" />
                </bean>
            </list>
        </constructor-arg>
        <property name="allowIfAllAbstainDecisions" value="false" />
    </bean>
 
    <bean id="customJdbcDaoImpl" class="ins.core.security.CustomJdbcDaoImpl">
        <property name="dataSource" ref="dataSource" />
        <property name="rolePrefix" value="ROLE_" />
        <property name="usersByUsernameQuery" value="SELECT USER_ID, USER_PWD, USER_NM, USER_EMAIL FROM T_USER WHERE USER_EMAIL=?" />
        <property name="authoritiesByUsernameQuery" value="SELECT ROLE_CODE FROM T_USER_ROLE WHERE USER_ID = ?" />
        <property name="enableGroups" value="false" />
    </bean>
    
    <bean id="customAuthenticationSuccessHandler" class="ins.core.security.CustomAuthenticationSuccessHandler">
        <property name="targetUrlParameter" value="loginRedirect" />
        <property name="useReferer" value="false" />
        <property name="defaultUrl" value="/task/search.do" />
    </bean>
    <bean id="customAuthenticationFailureHandler" class="ins.core.security.CustomAuthenticationFailureHandler">
        <property name="loginidname" value="loginid" />
        <property name="loginpasswdname" value="loginpwd" />
        <property name="loginredirectname" value="loginRedirect" />
        <property name="exceptionmsgname" value="securityexceptionmsg" />
        <property name="defaultFailureUrl" value="/login/login.do?fail=true" />
    </bean>
    
    <bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
    
    <bean id="sas" class="org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy">
        <constructor-arg>
            <list>
                <bean class="org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy">
                    <constructor-arg ref="sessionRegistry"/>
                    <property name="maximumSessions" value="1" />
                    <property name="exceptionIfMaximumExceeded" value="false" />
                </bean>
                <bean class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy">
                </bean>
                <bean class="org.springframework.security.web.authentication.session.RegisterSessionAuthenticationStrategy">
                    <constructor-arg ref="sessionRegistry"/>
                </bean>
            </list>
        </constructor-arg>
    </bean>
    <bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />
    
    <bean id="ajaxSessionTimeoutFilter" class="ins.core.web.filter.AjaxSessionTimeoutFilter">
        <property name="ajaxHeader" value="AJAX" />
    </bean>
    
    <beans profile="local">
        <bean id="beforeBasicAuthFilter" class="ins.core.web.filter.AutoLogInFilter">
            <property name="authenticationManager" ref="authenticationManager" />
            <property name="sessionAuthenticationStrategy" ref="sas" />
            <property name="profile" value="local" />
        </bean>
    </beans>
    
    <beans profile="dev">
        <bean id="beforeBasicAuthFilter" class="ins.core.web.filter.AutoLogInFilter">
            <property name="authenticationManager" ref="authenticationManager" />
            <property name="sessionAuthenticationStrategy" ref="sas" />
            <property name="profile" value="dev" />
        </bean>
    </beans>
    
    <beans profile="prod">
        <bean id="beforeBasicAuthFilter" class="ins.core.web.filter.AutoLogInFilter">
            <property name="authenticationManager" ref="authenticationManager" />
            <property name="sessionAuthenticationStrategy" ref="sas" />
            <property name="profile" value="prod" />
        </bean>
    </beans>
</beans>
